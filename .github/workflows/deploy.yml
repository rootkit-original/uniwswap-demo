name: 🚀 Deploy UniwSwap

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Permite execução manual

env:
  NODE_VERSION: '18'

jobs:
  # 🧪 Test and Build
  test-and-build:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    - name: 📦 Install Backend Dependencies
      run: |
        cd backend
        npm ci --only=production
    
    - name: 📦 Install Frontend Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: 🔨 Build Frontend
      run: |
        cd frontend
        npm run build
    
    - name: ✅ Health Check
      run: |
        echo "✅ Backend dependencies installed"
        echo "✅ Frontend built successfully"
        ls -la frontend/dist/ || echo "No dist folder found"

  # 🌍 Deploy Frontend to Vercel
  deploy-frontend:
    name: 🌍 Deploy Frontend (Vercel)
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🌍 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'
        github-comment: true

  # ☁️ Deploy Backend to Fly.io
  deploy-backend:
    name: ☁️ Deploy Backend (Fly.io)
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Fly CLI
      uses: superfly/flyctl-actions/setup-flyctl@master
    
    - name: 🚀 Deploy to Fly.io
      run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  # 📋 Deployment Summary
  deployment-summary:
    name: 📋 Deployment Summary
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📋 Create Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Successfully Deployed:" >> $GITHUB_STEP_SUMMARY
        echo "- 🌍 **Frontend**: Vercel" >> $GITHUB_STEP_SUMMARY
        echo "- ☁️ **Backend**: Fly.io" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links:" >> $GITHUB_STEP_SUMMARY
        echo "- **App URL**: https://your-vercel-app.vercel.app" >> $GITHUB_STEP_SUMMARY
        echo "- **API URL**: https://uniwswap-backend.fly.dev" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Commit Info:" >> $GITHUB_STEP_SUMMARY
        echo "- **SHA**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Author**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Message**: ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY